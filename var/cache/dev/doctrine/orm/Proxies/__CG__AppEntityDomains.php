<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Domains extends \App\Entity\Domains implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'creationDate', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'project', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'registrAr', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'registrAnt', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'ns1', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'ns2', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'adminManager', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'technicalManager', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'billingManager', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'client', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'hasCertificate'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'creationDate', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'project', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'registrAr', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'registrAnt', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'ns1', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'ns2', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'adminManager', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'technicalManager', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'billingManager', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'client', '' . "\0" . 'App\\Entity\\Domains' . "\0" . 'hasCertificate'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Domains $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate(\DateTimeInterface $creationDate): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', [$creationDate]);

        return parent::setCreationDate($creationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getProject(): ?\App\Entity\Projects
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', []);

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setProject(?\App\Entity\Projects $project): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProject', [$project]);

        return parent::setProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrAr(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrAr', []);

        return parent::getRegistrAr();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrAr(string $registrAr): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrAr', [$registrAr]);

        return parent::setRegistrAr($registrAr);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrAnt(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrAnt', []);

        return parent::getRegistrAnt();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrAnt(string $registrAnt): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrAnt', [$registrAnt]);

        return parent::setRegistrAnt($registrAnt);
    }

    /**
     * {@inheritDoc}
     */
    public function getNs1(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNs1', []);

        return parent::getNs1();
    }

    /**
     * {@inheritDoc}
     */
    public function setNs1(string $ns1): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNs1', [$ns1]);

        return parent::setNs1($ns1);
    }

    /**
     * {@inheritDoc}
     */
    public function getNs2(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNs2', []);

        return parent::getNs2();
    }

    /**
     * {@inheritDoc}
     */
    public function setNs2(string $ns2): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNs2', [$ns2]);

        return parent::setNs2($ns2);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdminManager(): ?\App\Entity\AccountsManagers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdminManager', []);

        return parent::getAdminManager();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdminManager(?\App\Entity\AccountsManagers $adminManager): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdminManager', [$adminManager]);

        return parent::setAdminManager($adminManager);
    }

    /**
     * {@inheritDoc}
     */
    public function getTechnicalManager(): ?\App\Entity\AccountsManagers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTechnicalManager', []);

        return parent::getTechnicalManager();
    }

    /**
     * {@inheritDoc}
     */
    public function setTechnicalManager(?\App\Entity\AccountsManagers $technicalManager): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTechnicalManager', [$technicalManager]);

        return parent::setTechnicalManager($technicalManager);
    }

    /**
     * {@inheritDoc}
     */
    public function getBillingManager(): ?\App\Entity\AccountsManagers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillingManager', []);

        return parent::getBillingManager();
    }

    /**
     * {@inheritDoc}
     */
    public function setBillingManager(?\App\Entity\AccountsManagers $billingManager): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBillingManager', [$billingManager]);

        return parent::setBillingManager($billingManager);
    }

    /**
     * {@inheritDoc}
     */
    public function getClient(): ?\App\Entity\Clients
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClient', []);

        return parent::getClient();
    }

    /**
     * {@inheritDoc}
     */
    public function setClient(?\App\Entity\Clients $client): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClient', [$client]);

        return parent::setClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasCertificate(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasCertificate', []);

        return parent::getHasCertificate();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasCertificate(bool $hasCertificate): \App\Entity\Domains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasCertificate', [$hasCertificate]);

        return parent::setHasCertificate($hasCertificate);
    }

}
